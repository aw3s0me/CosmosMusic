//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CosmosMusic.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Web.Mvc;

    [Bind(Exclude = "album_id")]
    public partial class Albums
    {
        public Albums()
        {
            this.Song = new HashSet<Song>();

            #region Artist_collection

            this.Artists = new HashSet<Artists>();
            foreach (var sng in this.Song)
            {
                foreach (var artist in sng.Artists)
                {
                    this.Artists.Add(artist); //Should be unique
                }
            }
            #endregion

            #region Genre_collection
            this.Genres = new HashSet<Genre>();

            foreach (var artist in this.Artists)
            {
                foreach (var genre in artist.Genre)
                {
                    this.Genres.Add(genre);
                }
            }

            #endregion

        }
        [ScaffoldColumn(false)]
        [Required(ErrorMessage = "Album id is required")]
        public System.Guid album_id { get; set; }
        
        [DisplayName("Album name")]
        [StringLength(50)]
        [Required(ErrorMessage = "Album name is required")]
        public string name { get; set; }

        [DisplayName("Added at")]
        [Required(ErrorMessage = "Add date is required")]
        public Nullable<System.DateTime> add_date { get; set; }

        [DisplayName("Rating")]
        [ScaffoldColumn(false)]
        [Required(ErrorMessage = "Rating is required")]
        public Nullable<int> rating { get; set; }

        [DisplayName("Cover name")]
        [StringLength(50, ErrorMessage = "String length must be no longer than 50 symbols")]
        [Required(ErrorMessage = "Cover name is required")]
        public string cover { get; set; }

        [DisplayName("User added")]
        [Required(ErrorMessage = "Username is required")]
        public System.Guid user_id { get; set; }

        [DisplayName("Year")]
        [Required(ErrorMessage = "Year is required")]
        [Range(1900, 2015, ErrorMessage = "Year must be between 1900 and 2015")]
        public Nullable<int> year { get; set; }

        #region collections
        public virtual Users Users { get; set; }
        public virtual ICollection<Song> Song { get; set; }
        public virtual ICollection<Artists> Artists { get; set; }
        public virtual ICollection<Genre> Genres { get; set; }
        #endregion

        #region funcs
        public void GenreInit()
        {
            foreach (var artist in this.Artists)
            {
                foreach (var genre in artist.Genre)
                {
                    this.Genres.Add(genre);
                }
            }
        }
        #endregion
    }
}
